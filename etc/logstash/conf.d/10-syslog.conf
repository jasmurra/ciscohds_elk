filter {
 if [type] == "syslog" {
                dns {
                        reverse => [ "host" ]
                        action => "replace"
                }
                mutate {
                        add_tag => [ "syslog" ]
                }
        }
 
  if [type] == "syslog" {
	grok {
	   patterns_dir => ["/usr/share/logstash/patterns"]
           match => { "message" => "<%{POSINT:syslog_pri}>%{TIMESTAMP02:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} \: %{DATA:syslog_program} %{GREEDYDATA:syslog_message}" }
                        add_field => [ "received_at", "%{@timestamp}" ]
                        add_field => [ "received_from", "%{host}" ]
                }
                syslog_pri { }
#                date {
                        # match => [ "syslog_timestamp", "MMM  d HH:mm:ss.SSS", "MMM dd HH:mm:ss.SSS" ]
			# match => [ "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601", "MMM d yyyy HH:mm:ss", "yyyy.MM.dd H:mm:ss", "MMM dd HH:mm:ss.SSS", "MMM  d HH:mm:ss.SSS" ]
#                }
                if !("_grokparsefailure" in [tags]) {
                        mutate {
                                replace => [ "host", "%{syslog_hostname}" ]
                                replace => [ "source_host", "%{syslog_hostname}" ]
                                replace => [ "message", "%{syslog_message}" ]
                        }
                }  
  }
}
